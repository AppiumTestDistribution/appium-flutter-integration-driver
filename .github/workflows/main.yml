on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: Appium Flutter Integration Driver
jobs:
  Build_Server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [29]
        target: [google_apis]
    steps:
      - name: Check out my other private repo
        uses: actions/checkout@master
        with:
          path: 'server'
          repository: AppiumTestDistribution/appium-flutter-server
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.1
          channel: 'stable'
      - run: |
          ls
          cd server/demo-app
          dart pub global activate rps --version 0.8.0
          flutter build apk --debug
          cd android && ./gradlew app:assembleDebug -Ptarget=`pwd`/../integration_test/appium.dart
      - name: "List files"
        continue-on-error: true
        run: |
          ls -l ${{ github.workspace }}/server/demo-app/build/app/outputs/apk/debug/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Android-build
          path: ${{ github.workspace }}/server/demo-app/build/app/outputs/apk/debug/app-debug.apk
  Run_Tests:
#   needs: Build_Server
   runs-on: ubuntu-latest
   strategy:
     matrix:
        api-level: [ 29 ]
        target: [ google_apis ]
   steps:
   - uses: actions/checkout@v2
   - uses: actions/setup-node@v4
     with:
      node-version: 20
   - name: Set up JDK 17
     uses: actions/setup-java@v3
     with:
      java-version: '17'
      distribution: 'adopt'
   - uses: dawidd6/action-download-artifact@v3
     with:
       name: Android-build
   - name: Display structure of downloaded files
     run: ls -R
   - uses: subosito/flutter-action@v2
     with:
       flutter-version: 3.19.6
       channel: 'stable'
   - name: Enable KVM group perms
     run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
   - name: run tests
     uses: reactivecircus/android-emulator-runner@v2
     with:
       api-level: ${{ matrix.api-level }}
       target: ${{ matrix.target }}
       arch: x86_64
       profile: Nexus 6
       script: |
         adb devices
         node --version
         npm install -g wait-on
         npm install -g appium
         appium driver install uiautomator2
         npm install
         npm run build
         appium driver list
         appium server -pa=/wd/hub &
         wait-on http://127.0.0.1:4723/wd/hub/status && npm run wdio-android
         

